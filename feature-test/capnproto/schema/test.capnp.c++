// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: test.capnp

#include "test.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<58> b_eae6cde4444d7ed7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    215, 126,  77,  68, 228, 205, 230, 234,
     41,   0,   0,   0,   1,   0,   0,   0,
    161, 106, 251, 217,  67, 104, 230, 225,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 101,  97, 116, 117, 114, 101,  45,
    116, 101, 115, 116,  47,  99,  97, 112,
    110, 112, 114, 111, 116, 111,  47, 115,
     99, 104, 101, 109,  97,  47, 116, 101,
    115, 116,  46,  99,  97, 112, 110, 112,
     58,  82, 101,  99, 111, 114, 100,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    105, 100, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105, 110, 103, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eae6cde4444d7ed7 = b_eae6cde4444d7ed7.words;
#if !CAPNP_LITE
static const uint16_t m_eae6cde4444d7ed7[] = {0, 1};
static const uint16_t i_eae6cde4444d7ed7[] = {0, 1};
const ::capnp::_::RawSchema s_eae6cde4444d7ed7 = {
  0xeae6cde4444d7ed7, b_eae6cde4444d7ed7.words, 58, nullptr, m_eae6cde4444d7ed7,
  0, 2, i_eae6cde4444d7ed7, nullptr, nullptr, { &s_eae6cde4444d7ed7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_b05651a0a8d7c46c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    108, 196, 215, 168, 160,  81,  86, 176,
     41,   0,   0,   0,   1,   0,   0,   0,
    161, 106, 251, 217,  67, 104, 230, 225,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 101,  97, 116, 117, 114, 101,  45,
    116, 101, 115, 116,  47,  99,  97, 112,
    110, 112, 114, 111, 116, 111,  47, 115,
     99, 104, 101, 109,  97,  47, 116, 101,
    115, 116,  46,  99,  97, 112, 110, 112,
     58,  82, 101,  99, 111, 114, 100,  77,
    105, 115, 115, 105, 110, 103,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 114, 105, 110, 103, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b05651a0a8d7c46c = b_b05651a0a8d7c46c.words;
#if !CAPNP_LITE
static const uint16_t m_b05651a0a8d7c46c[] = {0};
static const uint16_t i_b05651a0a8d7c46c[] = {0};
const ::capnp::_::RawSchema s_b05651a0a8d7c46c = {
  0xb05651a0a8d7c46c, b_b05651a0a8d7c46c.words, 40, nullptr, m_b05651a0a8d7c46c,
  0, 1, i_b05651a0a8d7c46c, nullptr, nullptr, { &s_b05651a0a8d7c46c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<74> b_fffee197a187b039 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     57, 176, 135, 161, 151, 225, 254, 255,
     41,   0,   0,   0,   1,   0,   1,   0,
    161, 106, 251, 217,  67, 104, 230, 225,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 101,  97, 116, 117, 114, 101,  45,
    116, 101, 115, 116,  47,  99,  97, 112,
    110, 112, 114, 111, 116, 111,  47, 115,
     99, 104, 101, 109,  97,  47, 116, 101,
    115, 116,  46,  99,  97, 112, 110, 112,
     58,  82, 101,  99, 111, 114, 100,  78,
    101, 119,  70, 105, 101, 108, 100,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
    105, 100, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105, 110, 103, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fffee197a187b039 = b_fffee197a187b039.words;
#if !CAPNP_LITE
static const uint16_t m_fffee197a187b039[] = {2, 0, 1};
static const uint16_t i_fffee197a187b039[] = {0, 1, 2};
const ::capnp::_::RawSchema s_fffee197a187b039 = {
  0xfffee197a187b039, b_fffee197a187b039.words, 74, nullptr, m_fffee197a187b039,
  0, 3, i_fffee197a187b039, nullptr, nullptr, { &s_fffee197a187b039, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<60> b_f9804b6fc5c65f91 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    145,  95, 198, 197, 111,  75, 128, 249,
     41,   0,   0,   0,   1,   0,   0,   0,
    161, 106, 251, 217,  67, 104, 230, 225,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 101,  97, 116, 117, 114, 101,  45,
    116, 101, 115, 116,  47,  99,  97, 112,
    110, 112, 114, 111, 116, 111,  47, 115,
     99, 104, 101, 109,  97,  47, 116, 101,
    115, 116,  46,  99,  97, 112, 110, 112,
     58,  82, 101,  99, 111, 114, 100,  82,
    101, 110,  97, 109, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    105, 100, 115, 114, 101, 109,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105, 110, 103, 115, 114,
    101, 109,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f9804b6fc5c65f91 = b_f9804b6fc5c65f91.words;
#if !CAPNP_LITE
static const uint16_t m_f9804b6fc5c65f91[] = {0, 1};
static const uint16_t i_f9804b6fc5c65f91[] = {0, 1};
const ::capnp::_::RawSchema s_f9804b6fc5c65f91 = {
  0xf9804b6fc5c65f91, b_f9804b6fc5c65f91.words, 60, nullptr, m_f9804b6fc5c65f91,
  0, 2, i_f9804b6fc5c65f91, nullptr, nullptr, { &s_f9804b6fc5c65f91, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<60> b_cc069895e013eae2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    226, 234,  19, 224, 149, 152,   6, 204,
     41,   0,   0,   0,   1,   0,   0,   0,
    161, 106, 251, 217,  67, 104, 230, 225,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 101,  97, 116, 117, 114, 101,  45,
    116, 101, 115, 116,  47,  99,  97, 112,
    110, 112, 114, 111, 116, 111,  47, 115,
     99, 104, 101, 109,  97,  47, 116, 101,
    115, 116,  46,  99,  97, 112, 110, 112,
     58,  82, 101,  99, 111, 114, 100,  84,
    121, 112, 101,  73, 110, 104, 101, 114,
    105, 116,  97, 110,  99, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    105, 100, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105, 110, 103, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cc069895e013eae2 = b_cc069895e013eae2.words;
#if !CAPNP_LITE
static const uint16_t m_cc069895e013eae2[] = {0, 1};
static const uint16_t i_cc069895e013eae2[] = {0, 1};
const ::capnp::_::RawSchema s_cc069895e013eae2 = {
  0xcc069895e013eae2, b_cc069895e013eae2.words, 60, nullptr, m_cc069895e013eae2,
  0, 2, i_cc069895e013eae2, nullptr, nullptr, { &s_cc069895e013eae2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Record
#ifndef _MSC_VER
constexpr uint16_t Record::_capnpPrivate::dataWordSize;
constexpr uint16_t Record::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Record::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Record::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Record::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RecordMissing
#ifndef _MSC_VER
constexpr uint16_t RecordMissing::_capnpPrivate::dataWordSize;
constexpr uint16_t RecordMissing::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RecordMissing::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RecordMissing::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RecordMissing::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RecordNewField
#ifndef _MSC_VER
constexpr uint16_t RecordNewField::_capnpPrivate::dataWordSize;
constexpr uint16_t RecordNewField::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RecordNewField::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RecordNewField::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RecordNewField::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RecordRename
#ifndef _MSC_VER
constexpr uint16_t RecordRename::_capnpPrivate::dataWordSize;
constexpr uint16_t RecordRename::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RecordRename::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RecordRename::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RecordRename::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RecordTypeInheritance
#ifndef _MSC_VER
constexpr uint16_t RecordTypeInheritance::_capnpPrivate::dataWordSize;
constexpr uint16_t RecordTypeInheritance::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RecordTypeInheritance::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RecordTypeInheritance::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RecordTypeInheritance::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



